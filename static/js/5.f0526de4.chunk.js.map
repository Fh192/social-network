{"version":3,"sources":["components/Toggle/Toggle.module.css","components/Users/FilterUsers/FilterUsers.module.css","components/Users/User/User.module.css","components/Users/Users.module.css","components/ScrollBtn/ScrollBtn.module.css","svg/Arrow.tsx","svg/MagnifierIcon.tsx","components/Toggle/Toggle.tsx","components/Users/FilterUsers/FilterUsers.tsx","components/Users/User/User.tsx","components/ScrollBtn/ScrollBtn.tsx","components/Users/Users.tsx","hooks/useQuery.ts"],"names":["module","exports","Arrow","size","type","color","styles","transition","transform","style","xmlns","xmlnsXlink","version","width","height","viewBox","xmlSpace","fill","d","MagnifierIcon","x","y","enableBackground","Toggle","checked","disabled","onChange","cx","classNames","bind","isDarkMode","useDarkMode","className","toggle","toggleD","FilterUsers","fetching","queryParams","pageCount","setQueryParams","dispatch","useDispatch","ref","useRef","useState","arrowType","setArrowType","friend","onlyFriends","setOnlyFriends","hideFriends","setHideFriends","term","setTerm","page","setPage","submitTerm","useCallback","params","trim","setInitialState","termSubmitHandler","e","key","useEffect","wheelListener","deltaY","document","addEventListener","removeEventListener","undefined","timer","setTimeout","clearTimeout","useOnClickOutside","filterUsers","title","onClick","arrow","arrowD","popup","popupD","showPopup","magnifier","id","placeholder","autoComplete","value","currentTarget","onKeyDown","clearTerm","clearTermVisible","p","CrossIcon","toggles","inputMode","val","target","htmlFor","maxPage","User","photo","photos","large","followed","userId","name","photoLoaded","setPhotoLoaded","inFollowProcess","useSelector","s","users","inFollowProgress","some","user","userD","link","to","src","photoPlaceholderD","photoPlaceholder","onLoad","loading","alt","photoPreloader","Preloader","col","username","followBtn","FollowButton","ScrollBtn","lastPosition","setLastPosition","visible","setVisible","el","scrollingElement","scrollListener","scrollTop","touchstartY","touchendY","touchStartListener","changedTouches","screenY","touchEndListener","scrollBtn","scrollBtnD","top","scroll","behavior","t","Users","navigate","useNavigate","query","URLSearchParams","useLocation","search","totalCount","setFetching","count","Number","get","Math","ceil","setQueryParamsToUrl","Object","entries","reduce","acc","listener","scrollHeight","clientHeight","getUsers","then","header","headerD","usersFound","toLocaleString","preloader","length","usersList","map","notFound","notFoundD","text"],"mappings":"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","file":"static/js/5.f0526de4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle\":\"Toggle_toggle__Cn-wh\",\"toggleD\":\"Toggle_toggleD__1Jmtu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterUsers\":\"FilterUsers_filterUsers__2Y9vA\",\"arrowD\":\"FilterUsers_arrowD__ti3pG\",\"title\":\"FilterUsers_title__ibg5D\",\"popup\":\"FilterUsers_popup__vK8hg\",\"popupD\":\"FilterUsers_popupD__1fd-H\",\"showPopup\":\"FilterUsers_showPopup__2lqB3\",\"magnifier\":\"FilterUsers_magnifier__3iqA5\",\"clearTerm\":\"FilterUsers_clearTerm__1acry\",\"clearTermVisible\":\"FilterUsers_clearTermVisible__1q3Ce\",\"term\":\"FilterUsers_term__2EUx0\",\"toggles\":\"FilterUsers_toggles__-zNm1\",\"page\":\"FilterUsers_page__3kMlJ\",\"maxPage\":\"FilterUsers_maxPage__34xRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__38FXz\",\"userD\":\"User_userD__3jNih\",\"link\":\"User_link__1YDXP\",\"followBtn\":\"User_followBtn__2PlbX\",\"photo\":\"User_photo__4Rk8a\",\"photoPreloader\":\"User_photoPreloader__35SVO\",\"col\":\"User_col__1cFGU\",\"username\":\"User_username__2XOY2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3jhox\",\"header\":\"Users_header__3yG7n\",\"headerD\":\"Users_headerD__1n0GV\",\"usersList\":\"Users_usersList__3sOPG\",\"preloader\":\"Users_preloader__2hxbA\",\"notFound\":\"Users_notFound__3r61_\",\"notFoundD\":\"Users_notFoundD__1qkZZ\",\"text\":\"Users_text__3g89f\",\"term\":\"Users_term__21juF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollBtn\":\"ScrollBtn_scrollBtn__3d0oL\",\"scrollBtnD\":\"ScrollBtn_scrollBtnD__2MZjE\",\"visible\":\"ScrollBtn_visible__17p76\"};","import React from 'react';\r\n\r\nexport type ArrowType = 'up' | 'down';\r\n\r\nconst Arrow: React.FC<{ size: string; type: ArrowType; color?: string }> = ({\r\n  size,\r\n  type,\r\n  color = '#0d1117',\r\n}) => {\r\n  let styles = { transition: 'all 0.2s ease', transform: 'rotateX(0deg)' };\r\n\r\n  if (type === 'up') {\r\n    styles = { ...styles, transform: 'rotateX(180deg)' };\r\n  }\r\n\r\n  return (\r\n    <svg\r\n      style={styles}\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      xmlnsXlink='http://www.w3.org/1999/xlink'\r\n      version='1.1'\r\n      width={size}\r\n      height={size}\r\n      viewBox='0 0 451.847 451.847'\r\n      xmlSpace='preserve'\r\n    >\r\n      <g>\r\n        <path\r\n          fill={color}\r\n          d='M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751   c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0   c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z'\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import React from 'react';\r\n\r\nconst MagnifierIcon: React.FC<{ size: string }> = ({ size }) => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      xmlnsXlink='http://www.w3.org/1999/xlink'\r\n      x='0px'\r\n      y='0px'\r\n      width={size}\r\n      height={size}\r\n      viewBox='0 0 30.239 30.239'\r\n      enableBackground='new 0 0 30.239 30.239'\r\n      xmlSpace='preserve'\r\n    >\r\n      <g>\r\n        <path d='M20.194,3.46c-4.613-4.613-12.121-4.613-16.734,0c-4.612,4.614-4.612,12.121,0,16.735   c4.108,4.107,10.506,4.547,15.116,1.34c0.097,0.459,0.319,0.897,0.676,1.254l6.718,6.718c0.979,0.977,2.561,0.977,3.535,0   c0.978-0.978,0.978-2.56,0-3.535l-6.718-6.72c-0.355-0.354-0.794-0.577-1.253-0.674C24.743,13.967,24.303,7.57,20.194,3.46z    M18.073,18.074c-3.444,3.444-9.049,3.444-12.492,0c-3.442-3.444-3.442-9.048,0-12.492c3.443-3.443,9.048-3.443,12.492,0   C21.517,9.026,21.517,14.63,18.073,18.074z' />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MagnifierIcon;\r\n","import classNames from 'classnames/bind';\r\nimport React from 'react';\r\nimport { useDarkMode } from 'usehooks-ts';\r\nimport styles from './Toggle.module.css';\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  checked: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const Toggle: React.FC<Props> = ({ checked, disabled, onChange }) => {\r\n  const cx = classNames.bind(styles);\r\n  const { isDarkMode } = useDarkMode();\r\n\r\n  return (\r\n    <input\r\n      className={cx({ toggle: true, toggleD: isDarkMode })}\r\n      type='checkbox'\r\n      checked={checked}\r\n      disabled={disabled}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n","import classNames from 'classnames/bind';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useDarkMode, useOnClickOutside } from 'usehooks-ts';\r\nimport { setInitialState } from '../../../store/reducers/usersSlice';\r\nimport Arrow from '../../../svg/Arrow';\r\nimport { CrossIcon } from '../../../svg/CrossIcon';\r\nimport MagnifierIcon from '../../../svg/MagnifierIcon';\r\nimport { IQueryParams } from '../../../types/users';\r\nimport { Toggle } from '../../Toggle/Toggle';\r\nimport styles from './FilterUsers.module.css';\r\n\r\ninterface Props {\r\n  fetching: boolean;\r\n  queryParams: IQueryParams;\r\n  pageCount: number;\r\n  setQueryParams: React.Dispatch<React.SetStateAction<IQueryParams>>;\r\n}\r\n\r\nexport const FilterUsers: React.FC<Props> = ({\r\n  fetching,\r\n  queryParams,\r\n  pageCount,\r\n  setQueryParams,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const cx = classNames.bind(styles);\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const { isDarkMode } = useDarkMode();\r\n  const [arrowType, setArrowType] = useState<'down' | 'up'>('down');\r\n  const [onlyFriends, setOnlyFriends] = useState(queryParams.friend === true);\r\n  const [hideFriends, setHideFriends] = useState(queryParams.friend === false);\r\n  const [term, setTerm] = useState(queryParams.term || '');\r\n  const [page, setPage] = useState(queryParams.page);\r\n\r\n  const toggleArrowType = () => {\r\n    setArrowType(type => (type === 'down' ? 'up' : 'down'));\r\n  };\r\n\r\n  const submitTerm = useCallback(() => {\r\n    setQueryParams(params => {\r\n      if (!!term.trim() && term.trim() !== params.term) {\r\n        dispatch(setInitialState());\r\n        return { ...params, term, page: 1 };\r\n      }\r\n      return params;\r\n    });\r\n  }, [term, setQueryParams, dispatch]);\r\n\r\n  const termSubmitHandler = (e?: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (!e || e.key === 'Enter') {\r\n      submitTerm();\r\n    }\r\n  };\r\n\r\n  const toggleHideFriends = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (onlyFriends) setOnlyFriends(false);\r\n    setHideFriends(e.currentTarget.checked);\r\n  };\r\n\r\n  const toggleOnlyFriends = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (hideFriends) setHideFriends(false);\r\n    setOnlyFriends(e.currentTarget.checked);\r\n  };\r\n\r\n  const pageChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = +e.target.value;\r\n    if (val <= pageCount) {\r\n      setPage(val);\r\n    }\r\n  };\r\n\r\n  const clearTerm = () => {\r\n    setTerm('');\r\n    setQueryParams(p => {\r\n      if (p.term !== undefined) {\r\n        dispatch(setInitialState());\r\n        return { ...p, term: undefined, page: 1 };\r\n      }\r\n      return p;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const wheelListener = (e: WheelEvent) => {\r\n      if (e.deltaY > 0) setArrowType('down');\r\n    };\r\n\r\n    document.addEventListener('wheel', wheelListener);\r\n    return () => document.removeEventListener('wheel', wheelListener);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const friend = onlyFriends ? true : hideFriends ? false : undefined;\r\n\r\n    setQueryParams(params => {\r\n      if (friend !== params.friend) {\r\n        dispatch(setInitialState());\r\n        return { ...params, friend, term: term || undefined, page: 1 };\r\n      }\r\n      return params;\r\n    });\r\n  }, [onlyFriends, hideFriends, term, dispatch, setQueryParams]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setQueryParams(params => {\r\n        if (page !== params.page) {\r\n          if (params.page === 1 && page < 1) {\r\n            setPage(1);\r\n          } else {\r\n            dispatch(setInitialState());\r\n            if (page <= 0) {\r\n              return { ...params, page: 1 };\r\n            } else {\r\n              return { ...params, page };\r\n            }\r\n          }\r\n        }\r\n        return params;\r\n      });\r\n      clearTimeout(timer);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [page, setQueryParams, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (queryParams.friend === undefined) {\r\n      setOnlyFriends(false);\r\n      setHideFriends(false);\r\n    } else if (!queryParams.friend) {\r\n      setOnlyFriends(false);\r\n      setHideFriends(true);\r\n    } else {\r\n      setOnlyFriends(true);\r\n      setHideFriends(false);\r\n    }\r\n    setPage(queryParams.page);\r\n    setTerm(queryParams.term || '');\r\n  }, [queryParams]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      submitTerm();\r\n      clearTimeout(timer);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [submitTerm]);\r\n\r\n  useOnClickOutside(ref, () => {\r\n    setArrowType('down');\r\n  });\r\n\r\n  return (\r\n    <div className={styles.filterUsers} ref={ref}>\r\n      <div className={styles.title} onClick={toggleArrowType}>\r\n        <span>Parameters</span>\r\n        <div className={cx({ arrow: true, arrowD: isDarkMode })}>\r\n          <Arrow size='10px' type={arrowType} color='#8ea6f4' />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={cx({\r\n          popup: true,\r\n          popupD: isDarkMode,\r\n          showPopup: arrowType === 'up',\r\n        })}\r\n      >\r\n        <div className={styles.term}>\r\n          <div className={styles.magnifier} onClick={() => termSubmitHandler()}>\r\n            <MagnifierIcon size='15px' />\r\n          </div>\r\n          <input\r\n            type='text'\r\n            id='term'\r\n            placeholder='Search'\r\n            autoComplete='off'\r\n            value={term}\r\n            disabled={fetching}\r\n            onChange={e => setTerm(e.currentTarget.value)}\r\n            onKeyDown={termSubmitHandler}\r\n          />\r\n\r\n          <div\r\n            className={cx({ clearTerm: true, clearTermVisible: !!term.trim() })}\r\n            onClick={clearTerm}\r\n          >\r\n            <CrossIcon size='15px' />\r\n          </div>\r\n        </div>\r\n        <div className={styles.toggles}>\r\n          <label>\r\n            <Toggle\r\n              onChange={toggleOnlyFriends}\r\n              checked={onlyFriends}\r\n              disabled={fetching}\r\n            />\r\n            <span>Only friends</span>\r\n          </label>\r\n          <label>\r\n            <Toggle\r\n              onChange={toggleHideFriends}\r\n              checked={hideFriends}\r\n              disabled={fetching}\r\n            />\r\n            <span>Hide friends</span>\r\n          </label>\r\n        </div>\r\n        <div className={styles.page}>\r\n          <input\r\n            type='text'\r\n            inputMode='numeric'\r\n            id='page'\r\n            value={page}\r\n            autoComplete='off'\r\n            onChange={pageChangeHandler}\r\n          />\r\n          <label htmlFor='page'>\r\n            Page <sup className={styles.maxPage}>max: {pageCount}</sup>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { IUser } from '../../../types/users';\r\nimport styles from './User.module.css';\r\nimport photoPlaceholder from '../../../assets/userPhoto.png';\r\nimport photoPlaceholderD from '../../../assets/userPhotoDark.png';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport FollowButton from '../../FollowButton/FollowButton';\r\nimport { useSelector } from '../../../hooks/useSelector';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames/bind';\r\nimport { useDarkMode } from 'usehooks-ts';\r\n\r\nexport const User: React.FC<IUser> = ({\r\n  photos: { large: photo },\r\n  followed,\r\n  id: userId,\r\n  name,\r\n}) => {\r\n  const cx = classNames.bind(styles);\r\n  const [photoLoaded, setPhotoLoaded] = useState(false);\r\n  const { isDarkMode } = useDarkMode();\r\n  const inFollowProcess = useSelector(s =>\r\n    s.users.inFollowProgress.some(id => id === userId)\r\n  );\r\n\r\n  return (\r\n    <li className={cx({ user: true, userD: isDarkMode })}>\r\n      <Link className={styles.link} to={`/profile/${userId}`} />\r\n      <div className={styles.photo}>\r\n        <Link to={`/profile/${userId}`}>\r\n          <img\r\n            src={photo || (isDarkMode ? photoPlaceholderD : photoPlaceholder)}\r\n            onLoad={() => setPhotoLoaded(true)}\r\n            loading='lazy'\r\n            alt='user'\r\n          />\r\n        </Link>\r\n        {!photoLoaded && (\r\n          <div className={styles.photoPreloader}>\r\n            <Preloader />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={styles.col}>\r\n        <div className={styles.username}>\r\n          <span>{name}</span>\r\n        </div>\r\n        <div className={styles.followBtn}>\r\n          <FollowButton\r\n            inFollowProcess={inFollowProcess}\r\n            followed={followed}\r\n            userId={userId}\r\n          />\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport { useDarkMode } from 'usehooks-ts';\r\nimport Arrow from '../../svg/Arrow';\r\nimport styles from './ScrollBtn.module.css';\r\n\r\nexport const ScrollBtn: React.FC = () => {\r\n  const cx = classNames.bind(styles);\r\n\r\n  const { isDarkMode } = useDarkMode();\r\n  const [arrowType, setArrowType] = useState<'up' | 'down'>('up');\r\n  const [lastPosition, setLastPosition] = useState(0);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const scroll = () => {\r\n    const el = document.scrollingElement;\r\n    if (el) {\r\n      const top = arrowType === 'up' ? 0 : lastPosition;\r\n      el.scroll({ behavior: 'smooth', top });\r\n      setLastPosition(el.scrollTop);\r\n      setArrowType(t => (t === 'down' ? 'up' : 'down'));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const el = document.scrollingElement as Element;\r\n\r\n    const scrollListener = (e: WheelEvent) => {\r\n      if (el.scrollTop <= 500) {\r\n        setVisible(false);\r\n        setLastPosition(0);\r\n      } else {\r\n        if (e.deltaY < 0) {\r\n          setArrowType('up');\r\n          setVisible(true);\r\n        } else setVisible(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('wheel', scrollListener);\r\n    return () => document.removeEventListener('wheel', scrollListener);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const el = document.scrollingElement as Element;\r\n    let touchstartY = 0;\r\n    let touchendY = 0;\r\n\r\n    const handleScroll = () => {\r\n      if (el.scrollTop <= 500 && touchendY !== touchstartY) {\r\n        setVisible(false);\r\n        setLastPosition(0);\r\n      } else {\r\n        if (touchendY < touchstartY) {\r\n          setVisible(false);\r\n        }\r\n        if (touchendY > touchstartY) {\r\n          setArrowType('up');\r\n          setVisible(true);\r\n        }\r\n      }\r\n    };\r\n    const touchStartListener = (e: TouchEvent) => {\r\n      touchstartY = e.changedTouches[0].screenY;\r\n    };\r\n    const touchEndListener = (e: TouchEvent) => {\r\n      touchendY = e.changedTouches[0].screenY;\r\n      handleScroll();\r\n    };\r\n\r\n    document.addEventListener('touchstart', touchStartListener);\r\n    document.addEventListener('touchend', touchEndListener);\r\n    return () => {\r\n      document.removeEventListener('touchstart', touchStartListener);\r\n      document.removeEventListener('touchend', touchEndListener);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={cx({ scrollBtn: true, visible, scrollBtnD: isDarkMode })}\r\n      onClick={scroll}\r\n    >\r\n      <button>\r\n        <Arrow\r\n          size='20px'\r\n          type={arrowType}\r\n          color={isDarkMode ? '#8ea6f4' : '#1c3177'}\r\n        />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch } from '../../hooks/useDispatch';\r\nimport { useSelector } from '../../hooks/useSelector';\r\nimport { getUsers, setInitialState } from '../../store/reducers/usersSlice';\r\nimport { IQueryParams } from '../../types/users';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { FilterUsers } from './FilterUsers/FilterUsers';\r\nimport { User } from './User/User';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './Users.module.css';\r\nimport { useQuery } from '../../hooks/useQuery';\r\nimport { useDarkMode } from 'usehooks-ts';\r\nimport { ScrollBtn } from '../ScrollBtn/ScrollBtn';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst Users: React.FC = () => {\r\n  const cx = classNames.bind(styles);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  let query = useQuery();\r\n\r\n  const { totalCount, users } = useSelector(s => s.users);\r\n  const { isDarkMode } = useDarkMode();\r\n  const [fetching, setFetching] = useState(false);\r\n  const [queryParams, setQueryParams] = useState<IQueryParams>({\r\n    count: 40,\r\n    page: Number(query.get('page')) || 1,\r\n    term: query.get('term') || undefined,\r\n    friend: !!query.get('friend') || undefined,\r\n  });\r\n  const pageCount = Math.ceil((totalCount || 1) / queryParams.count);\r\n\r\n  const setQueryParamsToUrl = useCallback(() => {\r\n    const { page, friend, term } = queryParams;\r\n\r\n    const search = Object.entries({ friend, term }).reduce(\r\n      (acc, [key, val]) => {\r\n        if (val !== undefined) {\r\n          return `${acc}&${key}=${val}`;\r\n        }\r\n        return acc;\r\n      },\r\n      `?page=${page}`\r\n    );\r\n\r\n    navigate({ search });\r\n  }, [queryParams, navigate]);\r\n\r\n  const resetParams = () => {\r\n    dispatch(setInitialState());\r\n    setQueryParams(params => ({\r\n      ...params,\r\n      page: 1,\r\n      term: undefined,\r\n      friend: undefined,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const el = document.scrollingElement as Element;\r\n\r\n    const listener = () => {\r\n      const { scrollTop, scrollHeight, clientHeight } = el;\r\n\r\n      if (!fetching && totalCount) {\r\n        if (scrollTop + clientHeight >= scrollHeight - 500) {\r\n          if (queryParams.page < pageCount) {\r\n            setFetching(true);\r\n            setQueryParams(params => {\r\n              return { ...params, page: params.page + 1 };\r\n            });\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('scroll', listener);\r\n    return () => document.removeEventListener('scroll', listener);\r\n  }, [totalCount, fetching, pageCount, queryParams.page]);\r\n\r\n  useEffect(() => {\r\n    setFetching(true);\r\n    dispatch(getUsers(queryParams)).then(() => {\r\n      setFetching(false);\r\n      setQueryParamsToUrl();\r\n    });\r\n  }, [dispatch, queryParams, setQueryParamsToUrl]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setInitialState());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.users}>\r\n      <div className={cx({ header: true, headerD: isDarkMode })}>\r\n        <div className={styles.usersFound}>\r\n          <span>Users found: {totalCount?.toLocaleString()}</span>\r\n        </div>\r\n        <FilterUsers\r\n          queryParams={queryParams}\r\n          setQueryParams={setQueryParams}\r\n          fetching={fetching}\r\n          pageCount={pageCount}\r\n        />\r\n      </div>\r\n      {totalCount === null ? (\r\n        <div className={styles.preloader}>\r\n          <Preloader />\r\n        </div>\r\n      ) : !!totalCount && !!users.length ? (\r\n        <ul className={styles.usersList}>\r\n          {users.map(user => (\r\n            <User {...user} key={user.id} />\r\n          ))}\r\n          {fetching && (\r\n            <div className={styles.preloader}>\r\n              <Preloader />\r\n            </div>\r\n          )}\r\n        </ul>\r\n      ) : (\r\n        <div className={cx({ notFound: true, notFoundD: isDarkMode })}>\r\n          <div className={styles.text}>\r\n            {queryParams.friend ? (\r\n              <span>\r\n                Friend\r\n                <span className={styles.term}>{` \"${queryParams.term}\" `}</span>\r\n                not found\r\n              </span>\r\n            ) : (\r\n              <span>\r\n                No results for\r\n                <span className={styles.term}>{` \"${queryParams.term}\" `}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n          <button type='reset' onClick={resetParams}>\r\n            Reset params\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <ScrollBtn />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { useLocation } from 'react-router';\r\n\r\nexport const useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n"],"sourceRoot":""}