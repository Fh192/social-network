{"version":3,"sources":["components/Toggle/Toggle.module.css","components/Users/FilterUsers/FilterUsers.module.css","components/Users/User/User.module.css","components/Users/Users.module.css","components/ScrollBtn/ScrollBtn.module.css","svg/Arrow.tsx","svg/MagnifierIcon.tsx","components/Toggle/Toggle.tsx","components/Users/FilterUsers/FilterUsers.tsx","components/Users/User/User.tsx","components/ScrollBtn/ScrollBtn.tsx","components/Users/Users.tsx","hooks/useQuery.ts"],"names":["module","exports","Arrow","size","type","color","styles","transition","transform","style","xmlns","xmlnsXlink","version","width","height","viewBox","xmlSpace","fill","d","MagnifierIcon","x","y","enableBackground","Toggle","checked","disabled","onChange","cx","classNames","bind","isDarkMode","useDarkMode","className","toggle","toggleD","FilterUsers","fetching","queryParams","setQueryParams","dispatch","useDispatch","ref","useRef","totalCount","useSelector","s","users","useState","arrowType","setArrowType","friend","onlyFriends","setOnlyFriends","hideFriends","setHideFriends","term","setTerm","termSubmitHandler","e","key","params","setInitialState","page","useEffect","wheelListener","deltaY","document","addEventListener","removeEventListener","undefined","useOnClickOutside","filterUsers","title","onClick","arrow","arrowD","popup","popupD","showPopup","magnifier","id","placeholder","autoComplete","value","currentTarget","onKeyDown","clearInput","CrossIcon","toggles","User","photo","photos","large","followed","userId","name","photoLoaded","setPhotoLoaded","inFollowProcess","inFollowProgress","some","user","userD","link","to","src","photoPlaceholderD","photoPlaceholder","onLoad","loading","alt","photoPreloader","Preloader","col","username","followBtn","FollowButton","ScrollBtn","lastPosition","setLastPosition","visible","setVisible","el","scrollingElement","scrollListener","scrollTop","touchstartY","touchendY","touchStartListener","changedTouches","screenY","touchEndListener","scrollBtn","scrollBtnD","top","scroll","behavior","t","Users","navigate","useNavigate","query","URLSearchParams","useLocation","search","setFetching","count","Number","get","setQueryParamsToUrl","useCallback","Object","entries","reduce","acc","val","listener","scrollHeight","clientHeight","length","getUsers","then","header","headerD","usersFound","toLocaleString","usersList","map","preloader","notFound"],"mappings":"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","file":"static/js/5.ae5f4d0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle\":\"Toggle_toggle__Cn-wh\",\"toggleD\":\"Toggle_toggleD__1Jmtu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterUsers\":\"FilterUsers_filterUsers__2Y9vA\",\"arrowD\":\"FilterUsers_arrowD__ti3pG\",\"title\":\"FilterUsers_title__ibg5D\",\"popup\":\"FilterUsers_popup__vK8hg\",\"popupD\":\"FilterUsers_popupD__1fd-H\",\"showPopup\":\"FilterUsers_showPopup__2lqB3\",\"magnifier\":\"FilterUsers_magnifier__3iqA5\",\"clearInput\":\"FilterUsers_clearInput__v6swI\",\"term\":\"FilterUsers_term__2EUx0\",\"toggles\":\"FilterUsers_toggles__-zNm1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__38FXz\",\"userD\":\"User_userD__3jNih\",\"link\":\"User_link__1YDXP\",\"followBtn\":\"User_followBtn__2PlbX\",\"photo\":\"User_photo__4Rk8a\",\"photoPreloader\":\"User_photoPreloader__35SVO\",\"col\":\"User_col__1cFGU\",\"username\":\"User_username__2XOY2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3jhox\",\"header\":\"Users_header__3yG7n\",\"headerD\":\"Users_headerD__1n0GV\",\"usersList\":\"Users_usersList__3sOPG\",\"preloader\":\"Users_preloader__2hxbA\",\"notFound\":\"Users_notFound__3r61_\",\"term\":\"Users_term__21juF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollBtn\":\"ScrollBtn_scrollBtn__3d0oL\",\"scrollBtnD\":\"ScrollBtn_scrollBtnD__2MZjE\",\"visible\":\"ScrollBtn_visible__17p76\"};","import React from 'react';\r\n\r\nexport type ArrowType = 'up' | 'down';\r\n\r\nconst Arrow: React.FC<{ size: string; type: ArrowType; color?: string }> = ({\r\n  size,\r\n  type,\r\n  color = '#0d1117',\r\n}) => {\r\n  let styles = { transition: 'all 0.2s ease', transform: 'rotateX(0deg)' };\r\n\r\n  if (type === 'up') {\r\n    styles = { ...styles, transform: 'rotateX(180deg)' };\r\n  }\r\n\r\n  return (\r\n    <svg\r\n      style={styles}\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      xmlnsXlink='http://www.w3.org/1999/xlink'\r\n      version='1.1'\r\n      width={size}\r\n      height={size}\r\n      viewBox='0 0 451.847 451.847'\r\n      xmlSpace='preserve'\r\n    >\r\n      <g>\r\n        <path\r\n          fill={color}\r\n          d='M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751   c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0   c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z'\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import React from 'react';\r\n\r\nconst MagnifierIcon: React.FC<{ size: string }> = ({ size }) => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      xmlnsXlink='http://www.w3.org/1999/xlink'\r\n      x='0px'\r\n      y='0px'\r\n      width={size}\r\n      height={size}\r\n      viewBox='0 0 30.239 30.239'\r\n      enableBackground='new 0 0 30.239 30.239'\r\n      xmlSpace='preserve'\r\n    >\r\n      <g>\r\n        <path d='M20.194,3.46c-4.613-4.613-12.121-4.613-16.734,0c-4.612,4.614-4.612,12.121,0,16.735   c4.108,4.107,10.506,4.547,15.116,1.34c0.097,0.459,0.319,0.897,0.676,1.254l6.718,6.718c0.979,0.977,2.561,0.977,3.535,0   c0.978-0.978,0.978-2.56,0-3.535l-6.718-6.72c-0.355-0.354-0.794-0.577-1.253-0.674C24.743,13.967,24.303,7.57,20.194,3.46z    M18.073,18.074c-3.444,3.444-9.049,3.444-12.492,0c-3.442-3.444-3.442-9.048,0-12.492c3.443-3.443,9.048-3.443,12.492,0   C21.517,9.026,21.517,14.63,18.073,18.074z' />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MagnifierIcon;\r\n","import classNames from 'classnames/bind';\r\nimport React from 'react';\r\nimport { useDarkMode } from 'usehooks-ts';\r\nimport styles from './Toggle.module.css';\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  checked: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const Toggle: React.FC<Props> = ({ checked, disabled, onChange }) => {\r\n  const cx = classNames.bind(styles);\r\n  const { isDarkMode } = useDarkMode();\r\n\r\n  return (\r\n    <input\r\n      className={cx({ toggle: true, toggleD: isDarkMode })}\r\n      type='checkbox'\r\n      checked={checked}\r\n      disabled={disabled}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n","import classNames from 'classnames/bind';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useDarkMode, useOnClickOutside } from 'usehooks-ts';\r\nimport { useSelector } from '../../../hooks/useSelector';\r\nimport { setInitialState } from '../../../store/reducers/usersSlice';\r\nimport Arrow from '../../../svg/Arrow';\r\nimport { CrossIcon } from '../../../svg/CrossIcon';\r\nimport MagnifierIcon from '../../../svg/MagnifierIcon';\r\nimport { IQueryParams } from '../../../types/users';\r\nimport { Toggle } from '../../Toggle/Toggle';\r\nimport styles from './FilterUsers.module.css';\r\n\r\ninterface Props {\r\n  fetching: boolean;\r\n  queryParams: IQueryParams;\r\n  setQueryParams: React.Dispatch<React.SetStateAction<IQueryParams>>;\r\n}\r\n\r\nexport const FilterUsers: React.FC<Props> = ({\r\n  fetching,\r\n  queryParams,\r\n  setQueryParams,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const cx = classNames.bind(styles);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const { isDarkMode } = useDarkMode();\r\n  const { totalCount } = useSelector(s => s.users);\r\n  const [arrowType, setArrowType] = useState<'down' | 'up'>('down');\r\n  const [onlyFriends, setOnlyFriends] = useState(queryParams.friend === true);\r\n  const [hideFriends, setHideFriends] = useState(queryParams.friend === false);\r\n  const [term, setTerm] = useState(queryParams.term || '');\r\n\r\n  const toggleArrowType = () => {\r\n    setArrowType(type => (type === 'down' ? 'up' : 'down'));\r\n  };\r\n\r\n  const termSubmitHandler = (e?: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (!e || e.key === 'Enter') {\r\n      setQueryParams(params => {\r\n        if (!!term && term !== params.term) {\r\n          dispatch(setInitialState());\r\n          return { ...params, term, page: 1 };\r\n        }\r\n        return params;\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggleHideFriends = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (onlyFriends) setOnlyFriends(false);\r\n    setHideFriends(e.currentTarget.checked);\r\n  };\r\n\r\n  const toggleOnlyFriends = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (hideFriends) setHideFriends(false);\r\n    setOnlyFriends(e.currentTarget.checked);\r\n  };\r\n\r\n  const clearTerm = () => {\r\n    setTerm('');\r\n    if (!totalCount) {\r\n      dispatch(setInitialState());\r\n      setQueryParams(params => {\r\n        return { ...params, term: undefined };\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const wheelListener = (e: WheelEvent) => {\r\n      if (e.deltaY > 0) setArrowType('down');\r\n    };\r\n\r\n    document.addEventListener('wheel', wheelListener);\r\n    return () => document.removeEventListener('wheel', wheelListener);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const friend = onlyFriends ? true : hideFriends ? false : undefined;\r\n\r\n    setQueryParams(params => {\r\n      if (friend !== params.friend) {\r\n        dispatch(setInitialState());\r\n        return { ...params, friend, term: term || undefined, page: 1 };\r\n      }\r\n      return params;\r\n    });\r\n  }, [onlyFriends, hideFriends, term, dispatch, setQueryParams]);\r\n\r\n  useOnClickOutside(ref, () => {\r\n    setArrowType('down');\r\n  });\r\n\r\n  return (\r\n    <div className={styles.filterUsers} ref={ref}>\r\n      <div className={styles.title} onClick={toggleArrowType}>\r\n        <span>Parameters</span>\r\n        <div className={cx({ arrow: true, arrowD: isDarkMode })}>\r\n          <Arrow size='10px' type={arrowType} color='#8ea6f4' />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={cx({\r\n          popup: true,\r\n          popupD: isDarkMode,\r\n          showPopup: arrowType === 'up',\r\n        })}\r\n      >\r\n        <div className={styles.term}>\r\n          <div className={styles.magnifier} onClick={() => termSubmitHandler()}>\r\n            <MagnifierIcon size='15px' />\r\n          </div>\r\n          <input\r\n            type='text'\r\n            id='term'\r\n            placeholder='Search'\r\n            autoComplete='off'\r\n            value={term}\r\n            disabled={fetching}\r\n            onChange={e => setTerm(e.currentTarget.value)}\r\n            onKeyDown={termSubmitHandler}\r\n          />\r\n          <div className={styles.clearInput} onClick={clearTerm}>\r\n            <CrossIcon size='15px' />\r\n          </div>\r\n        </div>\r\n        <div className={styles.toggles}>\r\n          <label>\r\n            <Toggle\r\n              onChange={toggleOnlyFriends}\r\n              checked={onlyFriends}\r\n              disabled={fetching}\r\n            />\r\n            <span>Only friends</span>\r\n          </label>\r\n          <label>\r\n            <Toggle\r\n              onChange={toggleHideFriends}\r\n              checked={hideFriends}\r\n              disabled={fetching}\r\n            />\r\n            <span>Hide friends</span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { IUser } from '../../../types/users';\r\nimport styles from './User.module.css';\r\nimport photoPlaceholder from '../../../assets/userPhoto.png';\r\nimport photoPlaceholderD from '../../../assets/userPhotoDark.png';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport FollowButton from '../../FollowButton/FollowButton';\r\nimport { useSelector } from '../../../hooks/useSelector';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames/bind';\r\nimport { useDarkMode } from 'usehooks-ts';\r\n\r\nexport const User: React.FC<IUser> = ({\r\n  photos: { large: photo },\r\n  followed,\r\n  id: userId,\r\n  name,\r\n}) => {\r\n  const cx = classNames.bind(styles);\r\n  const [photoLoaded, setPhotoLoaded] = useState(false);\r\n  const { isDarkMode } = useDarkMode();\r\n  const inFollowProcess = useSelector(s =>\r\n    s.users.inFollowProgress.some(id => id === userId)\r\n  );\r\n\r\n  return (\r\n    <li className={cx({ user: true, userD: isDarkMode })}>\r\n      <Link className={styles.link} to={`/profile/${userId}`} />\r\n      <div className={styles.photo}>\r\n        <Link to={`/profile/${userId}`}>\r\n          <img\r\n            src={photo || (isDarkMode ? photoPlaceholderD : photoPlaceholder)}\r\n            onLoad={() => setPhotoLoaded(true)}\r\n            loading='lazy'\r\n            alt='user'\r\n          />\r\n        </Link>\r\n        {!photoLoaded && (\r\n          <div className={styles.photoPreloader}>\r\n            <Preloader />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={styles.col}>\r\n        <div className={styles.username}>\r\n          <span>{name}</span>\r\n        </div>\r\n        <div className={styles.followBtn}>\r\n          <FollowButton\r\n            inFollowProcess={inFollowProcess}\r\n            followed={followed}\r\n            userId={userId}\r\n          />\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport { useDarkMode } from 'usehooks-ts';\r\nimport Arrow from '../../svg/Arrow';\r\nimport styles from './ScrollBtn.module.css';\r\n\r\nexport const ScrollBtn: React.FC = () => {\r\n  const cx = classNames.bind(styles);\r\n\r\n  const { isDarkMode } = useDarkMode();\r\n  const [arrowType, setArrowType] = useState<'up' | 'down'>('up');\r\n  const [lastPosition, setLastPosition] = useState(0);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const scroll = () => {\r\n    const el = document.scrollingElement;\r\n    if (el) {\r\n      const top = arrowType === 'up' ? 0 : lastPosition;\r\n      el.scroll({ behavior: 'smooth', top });\r\n      setLastPosition(el.scrollTop);\r\n      setArrowType(t => (t === 'down' ? 'up' : 'down'));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const el = document.scrollingElement as Element;\r\n\r\n    const scrollListener = (e: WheelEvent) => {\r\n      if (el.scrollTop <= 500) {\r\n        setVisible(false);\r\n        setLastPosition(0);\r\n      } else {\r\n        if (e.deltaY < 0) {\r\n          setArrowType('up');\r\n          setVisible(true);\r\n        } else setVisible(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('wheel', scrollListener);\r\n    return () => document.removeEventListener('wheel', scrollListener);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const el = document.scrollingElement as Element;\r\n    let touchstartY = 0;\r\n    let touchendY = 0;\r\n\r\n    const handleScroll = () => {\r\n      if (el.scrollTop <= 500 && touchendY !== touchstartY) {\r\n        setVisible(false);\r\n        setLastPosition(0);\r\n      } else {\r\n        if (touchendY < touchstartY) {\r\n          setVisible(false);\r\n        }\r\n        if (touchendY > touchstartY) {\r\n          setArrowType('up');\r\n          setVisible(true);\r\n        }\r\n      }\r\n    };\r\n    const touchStartListener = (e: TouchEvent) => {\r\n      touchstartY = e.changedTouches[0].screenY;\r\n    };\r\n    const touchEndListener = (e: TouchEvent) => {\r\n      touchendY = e.changedTouches[0].screenY;\r\n      handleScroll();\r\n    };\r\n\r\n    document.addEventListener('touchstart', touchStartListener);\r\n    document.addEventListener('touchend', touchEndListener);\r\n    return () => {\r\n      document.removeEventListener('touchstart', touchStartListener);\r\n      document.removeEventListener('touchend', touchEndListener);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={cx({ scrollBtn: true, visible, scrollBtnD: isDarkMode })}\r\n      onClick={scroll}\r\n    >\r\n      <button>\r\n        <Arrow\r\n          size='20px'\r\n          type={arrowType}\r\n          color={isDarkMode ? '#8ea6f4' : '#1c3177'}\r\n        />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch } from '../../hooks/useDispatch';\r\nimport { useSelector } from '../../hooks/useSelector';\r\nimport { getUsers, setInitialState } from '../../store/reducers/usersSlice';\r\nimport { IQueryParams } from '../../types/users';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { FilterUsers } from './FilterUsers/FilterUsers';\r\nimport { User } from './User/User';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './Users.module.css';\r\nimport { useQuery } from '../../hooks/useQuery';\r\nimport { useDarkMode } from 'usehooks-ts';\r\nimport { ScrollBtn } from '../ScrollBtn/ScrollBtn';\r\n\r\nconst Users: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  let query = useQuery();\r\n\r\n  const { totalCount, users } = useSelector(s => s.users);\r\n  const { isDarkMode } = useDarkMode();\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [queryParams, setQueryParams] = useState<IQueryParams>({\r\n    count: 40,\r\n    page: Number(query.get('page')) || 1,\r\n    term: query.get('term') || undefined,\r\n    friend: !!query.get('friend') || undefined,\r\n  });\r\n\r\n  const setQueryParamsToUrl = useCallback(() => {\r\n    const { page, friend, term } = queryParams;\r\n\r\n    const search = Object.entries({ friend, term }).reduce(\r\n      (acc, [key, val]) => {\r\n        if (val !== undefined) {\r\n          return `${acc}&${key}=${val}`;\r\n        }\r\n        return acc;\r\n      },\r\n      `?page=${page}`\r\n    );\r\n    navigate({ search });\r\n  }, [queryParams, navigate]);\r\n\r\n  useEffect(() => {\r\n    const el = document.scrollingElement as Element;\r\n\r\n    const listener = () => {\r\n      const { scrollTop, scrollHeight, clientHeight } = el;\r\n\r\n      if (!fetching && totalCount) {\r\n        if (scrollTop + clientHeight >= scrollHeight - 500) {\r\n          if (users.length < totalCount) {\r\n            setFetching(true);\r\n            setQueryParams(params => {\r\n              return { ...params, page: params.page + 1 };\r\n            });\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('scroll', listener);\r\n    return () => document.removeEventListener('scroll', listener);\r\n  }, [totalCount, users, fetching]);\r\n\r\n  useEffect(() => {\r\n    setFetching(true);\r\n    dispatch(getUsers(queryParams)).then(() => {\r\n      setFetching(false);\r\n      setQueryParamsToUrl();\r\n    });\r\n  }, [dispatch, queryParams, setQueryParamsToUrl]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setInitialState());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.users}>\r\n      <div className={`${styles.header} ${isDarkMode && styles.headerD}`}>\r\n        <div className={styles.usersFound}>\r\n          <span>Users found: {totalCount?.toLocaleString()}</span>\r\n        </div>\r\n        <FilterUsers\r\n          queryParams={queryParams}\r\n          setQueryParams={setQueryParams}\r\n          fetching={fetching}\r\n        />\r\n      </div>\r\n      {totalCount ? (\r\n        <ul className={styles.usersList}>\r\n          {users.map(user => (\r\n            <User {...user} key={user.id} />\r\n          ))}\r\n          {fetching && (\r\n            <div className={styles.preloader}>\r\n              <Preloader />\r\n            </div>\r\n          )}\r\n        </ul>\r\n      ) : totalCount === 0 ? (\r\n        <div className={styles.notFound}>\r\n          <span>No results for</span>\r\n          <span className={styles.term}>\"{queryParams.term}\"</span>\r\n        </div>\r\n      ) : (\r\n        <Preloader />\r\n      )}\r\n      <ScrollBtn />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { useLocation } from 'react-router';\r\n\r\nexport const useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n"],"sourceRoot":""}