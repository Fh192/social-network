{"version":3,"sources":["components/ScrollBtn/ScrollBtn.module.css","components/Toggle/Toggle.module.css","components/Users/FilterUsers/FilterUsers.module.css","components/Users/User/User.module.css","components/Users/Users.module.css","svg/Arrow.tsx","components/ScrollBtn/ScrollBtn.tsx","svg/MagnifierIcon.tsx","components/Toggle/Toggle.tsx","components/Users/FilterUsers/FilterUsers.tsx","store/selectors/usersSelector.ts","components/Users/User/User.tsx","components/Users/Users.tsx","hooks/useQuery.ts"],"names":["module","exports","Arrow","size","type","color","styles","transition","transform","style","xmlns","xmlnsXlink","version","width","height","viewBox","xmlSpace","fill","d","ScrollBtn","cx","classNames","bind","isDarkMode","useDarkMode","useState","arrowType","setArrowType","lastPosition","setLastPosition","visible","setVisible","useEffect","el","document","scrollingElement","scrollListener","e","scrollTop","deltaY","addEventListener","removeEventListener","touchstartY","touchendY","touchStartListener","changedTouches","screenY","touchEndListener","className","scrollBtn","scrollBtnD","onClick","top","scroll","behavior","t","MagnifierIcon","x","y","enableBackground","Toggle","checked","disabled","onChange","toggle","toggleD","FilterUsers","fetching","queryParams","pageCount","setQueryParams","dispatch","useDispatch","ref","useRef","friend","onlyFriends","setOnlyFriends","hideFriends","setHideFriends","term","setTerm","page","setPage","submitTerm","useCallback","params","trim","setInitialState","termSubmitHandler","key","wheelListener","undefined","timer","setTimeout","Math","max","clearTimeout","useOnClickOutside","filterUsers","title","arrow","arrowD","popup","popupD","showPopup","magnifier","id","placeholder","autoComplete","value","currentTarget","onKeyDown","clearTerm","clearTermVisible","p","CrossIcon","toggles","pageD","inputMode","val","target","htmlFor","maxPage","selectIsUserInFollowingProgress","createSelector","state","users","inFollowProgress","s","userId","usersInFollowingProgress","some","User","photo","photos","large","followed","name","photoLoaded","setPhotoLoaded","inFollowProcess","useSelector","user","userD","link","to","src","photoPlaceholderD","photoPlaceholder","loading","alt","onLoad","photoPreloader","Preloader","col","username","followBtn","FollowButton","Users","navigate","useNavigate","query","URLSearchParams","useLocation","search","usersListObserverRef","totalCount","setFetching","count","Number","get","ceil","setQueryParamsToUrl","Object","entries","reduce","acc","element","current","observer","IntersectionObserver","isIntersecting","observe","unobserve","getUsers","then","header","headerD","usersFound","toLocaleString","preloader","length","usersList","map","notFound","notFoundD","text"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,QAAU,6B,oBCAhHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,0B,oBCA5DD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,4BAA4B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,4BAA4B,UAAY,+BAA+B,UAAY,+BAA+B,UAAY,+BAA+B,iBAAmB,sCAAsC,KAAO,0BAA0B,QAAU,6BAA6B,KAAO,0BAA0B,MAAQ,2BAA2B,QAAU,+B,oBCAjiBD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,KAAO,mBAAmB,UAAY,wBAAwB,MAAQ,oBAAoB,eAAiB,6BAA6B,IAAM,kBAAkB,SAAW,yB,oBCAnPD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,QAAU,uBAAuB,UAAY,yBAAyB,UAAY,yBAAyB,UAAY,yBAAyB,SAAW,wBAAwB,UAAY,yBAAyB,KAAO,oBAAoB,KAAO,sB,sICmCzTC,EAhC4D,SAAC,GAIrE,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,KAEI,IADJC,aACI,MADI,UACJ,EACAC,EAAS,CAAEC,WAAY,gBAAiBC,UAAW,iBAMvD,MAJa,OAATJ,IACFE,EAAM,2BAAQA,GAAR,IAAgBE,UAAW,qBAIjC,qBACEC,MAAOH,EACPI,MAAM,6BACNC,WAAW,+BACXC,QAAQ,MACRC,MAAOV,EACPW,OAAQX,EACRY,QAAQ,sBACRC,SAAS,WARX,SAUE,4BACE,sBACEC,KAAMZ,EACNa,EAAE,sU,kBCvBCC,EAAsB,WACjC,IAAMC,EAAKC,IAAWC,KAAKhB,KAEnBiB,EAAeC,cAAfD,WACR,EAAkCE,mBAAwB,MAA1D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAkEA,OAtDAC,qBAAU,WACR,IAAMC,EAAKC,SAASC,iBAEdC,EAAiB,SAACC,GAClBJ,EAAGK,WAAa,KAClBP,GAAW,GACXF,EAAgB,IAEZQ,EAAEE,OAAS,GACbZ,EAAa,MACbI,GAAW,IACNA,GAAW,IAKtB,OADAG,SAASM,iBAAiB,QAASJ,GAC5B,kBAAMF,SAASO,oBAAoB,QAASL,MAClD,IAEHJ,qBAAU,WACR,IAAMC,EAAKC,SAASC,iBAChBO,EAAc,EACdC,EAAY,EAgBVC,EAAqB,SAACP,GAC1BK,EAAcL,EAAEQ,eAAe,GAAGC,SAE9BC,EAAmB,SAACV,GACxBM,EAAYN,EAAEQ,eAAe,GAAGC,QAjB5Bb,EAAGK,WAAa,KAAOK,IAAcD,GACvCX,GAAW,GACXF,EAAgB,KAEZc,EAAYD,GACdX,GAAW,GAETY,EAAYD,IACdf,EAAa,MACbI,GAAW,MAcjB,OAFAG,SAASM,iBAAiB,aAAcI,GACxCV,SAASM,iBAAiB,WAAYO,GAC/B,WACLb,SAASO,oBAAoB,aAAcG,GAC3CV,SAASO,oBAAoB,WAAYM,MAE1C,IAGD,qBACEC,UAAW5B,EAAG,CAAE6B,WAAW,EAAMnB,UAASoB,WAAY3B,IACtD4B,QAnEW,WACb,IAAMlB,EAAKC,SAASC,iBACpB,GAAIF,EAAI,CACN,IAAMmB,EAAoB,OAAd1B,EAAqB,EAAIE,EACrCK,EAAGoB,OAAO,CAAEC,SAAU,SAAUF,QAChCvB,EAAgBI,EAAGK,WACnBX,GAAa,SAAA4B,GAAC,MAAW,SAANA,EAAe,KAAO,YA2D3C,SAIE,iCACE,cAAC,EAAD,CACEpD,KAAK,OACLC,KAAMsB,EACNrB,MAAOkB,EAAa,UAAY,iB,gBCjE3BiC,EApBmC,SAAC,GAAc,IAAZrD,EAAW,EAAXA,KACnD,OACE,qBACEO,MAAM,6BACNC,WAAW,+BACX8C,EAAE,IACFC,EAAE,IACF7C,MAAOV,EACPW,OAAQX,EACRY,QAAQ,oBACR4C,iBAAiB,wBACjB3C,SAAS,WATX,SAWE,4BACE,sBAAME,EAAE,if,kBCLH0C,EAA0B,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACrD3C,EAAKC,IAAWC,KAAKhB,KACnBiB,EAAeC,cAAfD,WAER,OACE,uBACEyB,UAAW5B,EAAG,CAAE4C,QAAQ,EAAMC,QAAS1C,IACvCnB,KAAK,WACLyD,QAASA,EACTC,SAAUA,EACVC,SAAUA,K,kBCFHG,EAA+B,SAAC,GAKtC,IAAD,EAJJC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,UACAC,EACI,EADJA,eAEMC,EAAWC,cACXpD,EAAKC,IAAWC,KAAKhB,KAErBmE,EAAMC,iBAAuB,MAC3BnD,EAAeC,cAAfD,WACR,EAAkCE,mBAAwB,QAA1D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAgC,IAAvB2C,EAAYO,QAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCpD,oBAAgC,IAAvB2C,EAAYO,QAA3D,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAwBtD,mBAAQ,UAAC2C,EAAYY,YAAb,QAAqB,IAArD,mBAAOA,EAAP,KAAaC,EAAb,KACA,EAAwBxD,mBAAS2C,EAAYc,MAA7C,mBAAOA,EAAP,KAAaC,EAAb,KAMMC,EAAaC,uBAAY,WAC7Bf,GAAe,SAAAgB,GACb,OAAMN,EAAKO,QAAUP,EAAKO,SAAWD,EAAON,MAC1CT,EAASiB,eACF,2BAAKF,GAAZ,IAAoBN,OAAME,KAAM,KAE3BI,OAER,CAACN,EAAMV,EAAgBC,IAEpBkB,EAAoB,SAACpD,GACpBA,GAAe,UAAVA,EAAEqD,KAAiBN,KAiG/B,OApEApD,qBAAU,WACR,IAAM2D,EAAgB,SAACtD,GACjBA,EAAEE,OAAS,GAAGZ,EAAa,SAIjC,OADAO,SAASM,iBAAiB,QAASmD,GAC5B,kBAAMzD,SAASO,oBAAoB,QAASkD,MAClD,IAEH3D,qBAAU,WACR,IAAM2C,IAASC,IAAqBE,QAAsBc,EAE1DtB,GAAe,SAAAgB,GACb,OAAIX,IAAWW,EAAOX,QACpBJ,EAASiB,eACF,2BAAKF,GAAZ,IAAoBX,SAAQK,KAAMA,QAAQY,EAAWV,KAAM,KAEtDI,OAER,CAACV,EAAaE,EAAaE,EAAMT,EAAUD,IAE9CtC,qBAAU,WACR,IAAM6D,EAAQC,YAAW,WACvBxB,GAAe,SAAAgB,GACb,GAAIJ,IAASI,EAAOJ,KAAM,CACxB,KAAoB,IAAhBI,EAAOJ,MAAcA,EAAO,GAI9B,OADAX,EAASiB,eACF,2BAAKF,GAAZ,IAAoBJ,KAAMa,KAAKC,IAAI,EAAGd,KAHtCC,EAAQ,GAMZ,OAAOG,KAETW,aAAaJ,KACZ,KAEH,OAAO,kBAAMI,aAAaJ,MACzB,CAACX,EAAMZ,EAAgBC,IAE1BvC,qBAAU,WAAO,IAAD,OACa4D,IAAvBxB,EAAYO,QACdE,GAAe,GACfE,GAAe,IACLX,EAAYO,QAItBE,GAAe,GACfE,GAAe,KAJfF,GAAe,GACfE,GAAe,IAKjBI,EAAQf,EAAYc,MACpBD,EAAO,UAACb,EAAYY,YAAb,QAAqB,MAC3B,CAACZ,IAEJpC,qBAAU,WACR,IAAM6D,EAAQC,YAAW,WACvBV,IACAa,aAAaJ,KACZ,KAEH,OAAO,kBAAMI,aAAaJ,MACzB,CAACT,IAEJc,YAAkBzB,GAAK,WACrB9C,EAAa,WAIb,sBAAKqB,UAAW1C,IAAO6F,YAAa1B,IAAKA,EAAzC,UACE,sBAAKzB,UAAW1C,IAAO8F,MAAOjD,QAlHV,WACtBxB,GAAa,SAAAvB,GAAI,MAAc,SAATA,EAAkB,KAAO,WAiH7C,UACE,8CACA,qBAAK4C,UAAW5B,EAAG,CAAEiF,OAAO,EAAMC,OAAQ/E,IAA1C,SACE,cAAC,EAAD,CAAOpB,KAAK,OAAOC,KAAMsB,EAAWrB,MAAM,iBAG9C,sBACE2C,UAAW5B,EAAG,CACZmF,OAAO,EACPC,OAAQjF,EACRkF,UAAyB,OAAd/E,IAJf,UAOE,sBAAKsB,UAAW1C,IAAO0E,KAAvB,UACE,qBAAKhC,UAAW1C,IAAOoG,UAAWvD,QAAS,kBAAMsC,KAAjD,SACE,cAAC,EAAD,CAAetF,KAAK,WAEtB,uBACEC,KAAK,OACLuG,GAAG,OACHC,YAAY,SACZC,aAAa,MACbC,MAAO9B,EACPlB,SAAUK,EACVJ,SAAU,SAAA1B,GAAC,OAAI4C,EAAQ5C,EAAE0E,cAAcD,QACvCE,UAAWvB,IAGb,qBACEzC,UAAW5B,EAAG,CAAE6F,WAAW,EAAMC,mBAAoBlC,EAAKO,SAC1DpC,QA/GQ,WAChB8B,EAAQ,IACRX,GAAe,SAAA6C,GACb,YAAevB,IAAXuB,EAAEnC,MACJT,EAASiB,eACF,2BAAK2B,GAAZ,IAAenC,UAAMY,EAAWV,KAAM,KAEjCiC,MAsGH,SAIE,cAACC,EAAA,EAAD,CAAWjH,KAAK,cAGpB,sBAAK6C,UAAW1C,IAAO+G,QAAvB,UACE,kCACE,cAAC,EAAD,CACExD,QAASe,EACTd,SAAUK,EACVJ,SAnIc,SAAC1B,GACrByC,GAAaC,GAAe,GAChCF,EAAexC,EAAE0E,cAAclD,YAmIvB,mDAEF,kCACE,cAAC,EAAD,CACEA,QAASiB,EACThB,SAAUK,EACVJ,SAhJc,SAAC1B,GACrBuC,GAAaC,GAAe,GAChCE,EAAe1C,EAAE0E,cAAclD,YAgJvB,sDAGJ,sBAAKb,UAAW5B,EAAG,CAAE8D,MAAM,EAAMoC,MAAO/F,IAAxC,UACE,uBACEnB,KAAK,OACLmH,UAAU,UACVZ,GAAG,OACHG,MAAO5B,EACP2B,aAAa,MACb9C,SAlJgB,SAAC1B,GACzB,IAAMmF,GAAOnF,EAAEoF,OAAOX,MAClBU,GAAOnD,GAAWc,EAAQqC,MAkJxB,wBAAOE,QAAQ,OAAf,kBACO,sBAAK1E,UAAW1C,IAAOqH,QAAvB,kBAAsCtD,kB,gCCpM1CuD,EAAkCC,YAC7C,CAL4C,SAC5CC,GAD4C,OAETA,EAAMC,MAAMC,kBAGd,SAACC,EAAcC,GAAf,OAAkCA,KACnE,SAACC,EAA0BD,GAA3B,OACEC,EAAyBC,MAAK,SAAAzB,GAAE,OAAIA,IAAOuB,Q,0BCPlCG,EAAwB,SAAC,GAK/B,IAJYC,EAIb,EAJJC,OAAUC,MACVC,EAGI,EAHJA,SACIP,EAEA,EAFJvB,GACA+B,EACI,EADJA,KAEMtH,EAAKC,IAAWC,KAAKhB,KAC3B,EAAsCmB,oBAAS,GAA/C,mBAAOkH,EAAP,KAAoBC,EAApB,KACQrH,EAAeC,cAAfD,WACFsH,EAAkBC,aAAY,SAAAb,GAAC,OACnCL,EAAgCK,EAAGC,MAGrC,OACE,qBAAIlF,UAAW5B,EAAG,CAAE2H,MAAM,EAAMC,MAAOzH,IAAvC,UACE,cAAC,IAAD,CAAMyB,UAAW1C,IAAO2I,KAAMC,GAAE,mBAAchB,KAC9C,sBAAKlF,UAAW1C,IAAOgI,MAAvB,UACE,cAAC,IAAD,CAAMY,GAAE,mBAAchB,GAAtB,SACE,qBACEiB,IAAKb,IAAU/G,EAAa6H,IAAoBC,KAChDC,QAAQ,OACRC,IAAI,OACJC,OAAQ,kBAAMZ,GAAe,SAG/BD,GACA,qBAAK3F,UAAW1C,IAAOmJ,eAAvB,SACE,cAACC,EAAA,EAAD,SAIN,sBAAK1G,UAAW1C,IAAOqJ,IAAvB,UACE,qBAAK3G,UAAW1C,IAAOsJ,SAAvB,SACE,+BAAOlB,MAET,qBAAK1F,UAAW1C,IAAOuJ,UAAvB,SACE,cAACC,EAAA,EAAD,CACEjB,gBAAiBA,EACjBJ,SAAUA,EACVP,OAAQA,a,kBCkGL6B,UAvIS,WACtB,IAAM3I,EAAKC,IAAWC,KAAKhB,KACrBiE,EAAWC,cACXwF,EAAWC,cAEbC,ECjBG,IAAIC,gBAAgBC,cAAcC,QDmBnCC,EAAuB5F,iBAAuB,MACpD,EAA8BoE,aAAY,SAAAb,GAAC,OAAIA,EAAEF,SAAzCwC,EAAR,EAAQA,WAAYxC,EAApB,EAAoBA,MACZxG,EAAeC,cAAfD,WACR,EAAgCE,oBAAS,GAAzC,mBAAO0C,EAAP,KAAiBqG,EAAjB,KACA,EAAsC/I,mBAAuB,CAC3DgJ,MAAO,GACPvF,KAAMwF,OAAOR,EAAMS,IAAI,UAAY,EACnC3F,KAAMkF,EAAMS,IAAI,cAAW/E,EAC3BjB,SAAUuF,EAAMS,IAAI,gBAAa/E,IAJnC,mBAAOxB,EAAP,KAAoBE,EAApB,KAMMD,EAAY0B,KAAK6E,MAAK,OAACL,QAAD,IAACA,IAAc,GAAKnG,EAAYqG,OAEtDI,EAAsBxF,uBAAY,WACtC,IAAQH,EAAuBd,EAAvBc,KAAMP,EAAiBP,EAAjBO,OAAQK,EAASZ,EAATY,KAEhBqF,EAASS,OAAOC,QAAQ,CAAEpG,SAAQK,SAAQgG,QAC9C,SAACC,EAAD,GAAsB,IAAD,mBAAdvF,EAAc,KAAT8B,EAAS,KAEnB,YADY5B,IAAR4B,IAAmByD,GAAG,WAAQvF,EAAR,YAAe8B,IAClCyD,IAHI,gBAKJ/F,IAGX8E,EAAS,CAAEK,aACV,CAACjG,EAAa4F,IA+CjB,OAnCAhI,qBAAU,WACR,IAAMkJ,EAAUZ,EAAqBa,QAC/BC,EAAW,IAAIC,sBAAqB,YAA0B,oBAAtBC,iBACrBnH,GAAYoG,GAC7BnG,EAAYc,KAAOb,IACrBmG,GAAY,GACZlG,GAAe,SAAAgB,GACb,OAAO,2BAAKA,GAAZ,IAAoBJ,KAAMI,EAAOJ,KAAO,WAQhD,OAFIgG,GAASE,EAASG,QAAQL,GAEvB,WACDA,GAASE,EAASI,UAAUN,MAEjC,CAACX,EAAYpG,EAAUE,EAAWD,EAAYc,KAAMoF,IAEvDtI,qBAAU,WACRwI,GAAY,GAEZjG,EAASkH,YAASrH,IAAcsH,MAAK,WACnClB,GAAY,GACZK,SAED,CAACtG,EAAUH,EAAayG,IAE3B7I,qBAAU,WACR,OAAO,WACLuC,EAASiB,kBAEV,CAACjB,IAGF,0BAASvB,UAAW1C,IAAOyH,MAA3B,UACE,sBAAK/E,UAAW5B,EAAG,CAAEuK,QAAQ,EAAMC,QAASrK,IAA5C,UACE,qBAAKyB,UAAW1C,IAAOuL,WAAvB,SACE,wDAAoBtB,QAApB,IAAoBA,OAApB,EAAoBA,EAAYuB,sBAElC,cAAC,EAAD,CACE1H,YAAaA,EACbE,eAAgBA,EAChBH,SAAUA,EACVE,UAAWA,OAGC,OAAfkG,EACC,qBAAKvH,UAAW1C,IAAOyL,UAAvB,SACE,cAACrC,EAAA,EAAD,MAEEa,GAAgBxC,EAAMiE,OAC1B,qBAAIhJ,UAAW1C,IAAO2L,UAAtB,UACGlE,EAAMmE,KAAI,SAAAnD,GAAI,OACb,wBAAC,EAAD,2BAAUA,GAAV,IAAgBrD,IAAKqD,EAAKpC,SAE3BxC,GACC,qBAAKnB,UAAW1C,IAAOyL,UAAvB,SACE,cAACrC,EAAA,EAAD,MAGJ,qBAAKjF,IAAK6F,OAGZ,sBAAKtH,UAAW5B,EAAG,CAAE+K,UAAU,EAAMC,UAAW7K,IAAhD,UACE,qBAAKyB,UAAW1C,IAAO+L,KAAvB,SACGjI,EAAYO,OACX,0CAEE,sBAAM3B,UAAW1C,IAAO0E,KAAxB,qBAAoCZ,EAAYY,KAAhD,QAFF,eAMA,kDAEE,sBAAMhC,UAAW1C,IAAO0E,KAAxB,qBAAoCZ,EAAYY,KAAhD,aAIN,wBAAQ5E,KAAK,QAAQ+C,QA1FT,WAClBoB,EAASiB,eACTlB,GAAe,SAAAgB,GAAM,kCAChBA,GADgB,IAEnBJ,KAAM,EACNF,UAAMY,EACNjB,YAAQiB,QAoFJ,6BAKJ,qBAAK5C,UAAW1C,IAAO2C,UAAvB,SACE,cAAC,EAAD","file":"static/js/5.789cafcc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollBtn\":\"ScrollBtn_scrollBtn__3d0oL\",\"scrollBtnD\":\"ScrollBtn_scrollBtnD__2MZjE\",\"visible\":\"ScrollBtn_visible__17p76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle\":\"Toggle_toggle__Cn-wh\",\"toggleD\":\"Toggle_toggleD__1Jmtu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterUsers\":\"FilterUsers_filterUsers__2Y9vA\",\"arrowD\":\"FilterUsers_arrowD__ti3pG\",\"title\":\"FilterUsers_title__ibg5D\",\"popup\":\"FilterUsers_popup__vK8hg\",\"popupD\":\"FilterUsers_popupD__1fd-H\",\"showPopup\":\"FilterUsers_showPopup__2lqB3\",\"magnifier\":\"FilterUsers_magnifier__3iqA5\",\"clearTerm\":\"FilterUsers_clearTerm__1acry\",\"clearTermVisible\":\"FilterUsers_clearTermVisible__1q3Ce\",\"term\":\"FilterUsers_term__2EUx0\",\"toggles\":\"FilterUsers_toggles__-zNm1\",\"page\":\"FilterUsers_page__3kMlJ\",\"pageD\":\"FilterUsers_pageD__k70Xf\",\"maxPage\":\"FilterUsers_maxPage__34xRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__38FXz\",\"userD\":\"User_userD__3jNih\",\"link\":\"User_link__1YDXP\",\"followBtn\":\"User_followBtn__2PlbX\",\"photo\":\"User_photo__4Rk8a\",\"photoPreloader\":\"User_photoPreloader__35SVO\",\"col\":\"User_col__1cFGU\",\"username\":\"User_username__2XOY2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3jhox\",\"header\":\"Users_header__3yG7n\",\"headerD\":\"Users_headerD__1n0GV\",\"usersList\":\"Users_usersList__3sOPG\",\"scrollBtn\":\"Users_scrollBtn__1zp-Y\",\"preloader\":\"Users_preloader__2hxbA\",\"notFound\":\"Users_notFound__3r61_\",\"notFoundD\":\"Users_notFoundD__1qkZZ\",\"text\":\"Users_text__3g89f\",\"term\":\"Users_term__21juF\"};","import React from 'react';\r\n\r\nexport type ArrowType = 'up' | 'down';\r\n\r\nconst Arrow: React.FC<{ size: string; type: ArrowType; color?: string }> = ({\r\n  size,\r\n  type,\r\n  color = '#0d1117',\r\n}) => {\r\n  let styles = { transition: 'all 0.2s ease', transform: 'rotateX(0deg)' };\r\n\r\n  if (type === 'up') {\r\n    styles = { ...styles, transform: 'rotateX(180deg)' };\r\n  }\r\n\r\n  return (\r\n    <svg\r\n      style={styles}\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      xmlnsXlink='http://www.w3.org/1999/xlink'\r\n      version='1.1'\r\n      width={size}\r\n      height={size}\r\n      viewBox='0 0 451.847 451.847'\r\n      xmlSpace='preserve'\r\n    >\r\n      <g>\r\n        <path\r\n          fill={color}\r\n          d='M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751   c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0   c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z'\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import React, { useEffect, useState } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport { useDarkMode } from 'usehooks-ts';\r\nimport Arrow from '../../svg/Arrow';\r\nimport styles from './ScrollBtn.module.css';\r\n\r\nexport const ScrollBtn: React.FC = () => {\r\n  const cx = classNames.bind(styles);\r\n\r\n  const { isDarkMode } = useDarkMode();\r\n  const [arrowType, setArrowType] = useState<'up' | 'down'>('up');\r\n  const [lastPosition, setLastPosition] = useState(0);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const scroll = () => {\r\n    const el = document.scrollingElement;\r\n    if (el) {\r\n      const top = arrowType === 'up' ? 0 : lastPosition;\r\n      el.scroll({ behavior: 'smooth', top });\r\n      setLastPosition(el.scrollTop);\r\n      setArrowType(t => (t === 'down' ? 'up' : 'down'));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const el = document.scrollingElement as Element;\r\n\r\n    const scrollListener = (e: WheelEvent) => {\r\n      if (el.scrollTop <= 500) {\r\n        setVisible(false);\r\n        setLastPosition(0);\r\n      } else {\r\n        if (e.deltaY < 0) {\r\n          setArrowType('up');\r\n          setVisible(true);\r\n        } else setVisible(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('wheel', scrollListener);\r\n    return () => document.removeEventListener('wheel', scrollListener);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const el = document.scrollingElement as Element;\r\n    let touchstartY = 0;\r\n    let touchendY = 0;\r\n\r\n    const handleScroll = () => {\r\n      if (el.scrollTop <= 500 && touchendY !== touchstartY) {\r\n        setVisible(false);\r\n        setLastPosition(0);\r\n      } else {\r\n        if (touchendY < touchstartY) {\r\n          setVisible(false);\r\n        }\r\n        if (touchendY > touchstartY) {\r\n          setArrowType('up');\r\n          setVisible(true);\r\n        }\r\n      }\r\n    };\r\n    const touchStartListener = (e: TouchEvent) => {\r\n      touchstartY = e.changedTouches[0].screenY;\r\n    };\r\n    const touchEndListener = (e: TouchEvent) => {\r\n      touchendY = e.changedTouches[0].screenY;\r\n      handleScroll();\r\n    };\r\n\r\n    document.addEventListener('touchstart', touchStartListener);\r\n    document.addEventListener('touchend', touchEndListener);\r\n    return () => {\r\n      document.removeEventListener('touchstart', touchStartListener);\r\n      document.removeEventListener('touchend', touchEndListener);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={cx({ scrollBtn: true, visible, scrollBtnD: isDarkMode })}\r\n      onClick={scroll}\r\n    >\r\n      <button>\r\n        <Arrow\r\n          size='20px'\r\n          type={arrowType}\r\n          color={isDarkMode ? '#8ea6f4' : '#1c3177'}\r\n        />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst MagnifierIcon: React.FC<{ size: string }> = ({ size }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      x=\"0\"\r\n      y=\"0\"\r\n      width={size}\r\n      height={size}\r\n      viewBox=\"0 0 30.239 30.239\"\r\n      enableBackground=\"new 0 0 30.239 30.239\"\r\n      xmlSpace=\"preserve\"\r\n    >\r\n      <g>\r\n        <path d=\"M20.194,3.46c-4.613-4.613-12.121-4.613-16.734,0c-4.612,4.614-4.612,12.121,0,16.735   c4.108,4.107,10.506,4.547,15.116,1.34c0.097,0.459,0.319,0.897,0.676,1.254l6.718,6.718c0.979,0.977,2.561,0.977,3.535,0   c0.978-0.978,0.978-2.56,0-3.535l-6.718-6.72c-0.355-0.354-0.794-0.577-1.253-0.674C24.743,13.967,24.303,7.57,20.194,3.46z    M18.073,18.074c-3.444,3.444-9.049,3.444-12.492,0c-3.442-3.444-3.442-9.048,0-12.492c3.443-3.443,9.048-3.443,12.492,0   C21.517,9.026,21.517,14.63,18.073,18.074z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MagnifierIcon;\r\n","import classNames from 'classnames/bind';\r\nimport React from 'react';\r\nimport { useDarkMode } from 'usehooks-ts';\r\nimport styles from './Toggle.module.css';\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  checked: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const Toggle: React.FC<Props> = ({ checked, disabled, onChange }) => {\r\n  const cx = classNames.bind(styles);\r\n  const { isDarkMode } = useDarkMode();\r\n\r\n  return (\r\n    <input\r\n      className={cx({ toggle: true, toggleD: isDarkMode })}\r\n      type='checkbox'\r\n      checked={checked}\r\n      disabled={disabled}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n","import classNames from 'classnames/bind';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useDarkMode, useOnClickOutside } from 'usehooks-ts';\r\nimport { setInitialState } from '../../../store/reducers/usersSlice';\r\nimport Arrow from '../../../svg/Arrow';\r\nimport { CrossIcon } from '../../../svg/CrossIcon';\r\nimport MagnifierIcon from '../../../svg/MagnifierIcon';\r\nimport { IQueryParams } from '../../../types/users';\r\nimport { Toggle } from '../../Toggle/Toggle';\r\nimport styles from './FilterUsers.module.css';\r\n\r\ninterface Props {\r\n  fetching: boolean;\r\n  queryParams: IQueryParams;\r\n  pageCount: number;\r\n  setQueryParams: React.Dispatch<React.SetStateAction<IQueryParams>>;\r\n}\r\n\r\nexport const FilterUsers: React.FC<Props> = ({\r\n  fetching,\r\n  queryParams,\r\n  pageCount,\r\n  setQueryParams,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const cx = classNames.bind(styles);\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const { isDarkMode } = useDarkMode();\r\n  const [arrowType, setArrowType] = useState<'down' | 'up'>('down');\r\n  const [onlyFriends, setOnlyFriends] = useState(queryParams.friend === true);\r\n  const [hideFriends, setHideFriends] = useState(queryParams.friend === false);\r\n  const [term, setTerm] = useState(queryParams.term ?? '');\r\n  const [page, setPage] = useState(queryParams.page);\r\n\r\n  const toggleArrowType = () => {\r\n    setArrowType(type => (type === 'down' ? 'up' : 'down'));\r\n  };\r\n\r\n  const submitTerm = useCallback(() => {\r\n    setQueryParams(params => {\r\n      if (!!term.trim() && term.trim() !== params.term) {\r\n        dispatch(setInitialState());\r\n        return { ...params, term, page: 1 };\r\n      }\r\n      return params;\r\n    });\r\n  }, [term, setQueryParams, dispatch]);\r\n\r\n  const termSubmitHandler = (e?: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (!e || e.key === 'Enter') submitTerm();\r\n  };\r\n\r\n  const toggleHideFriends = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (onlyFriends) setOnlyFriends(false);\r\n    setHideFriends(e.currentTarget.checked);\r\n  };\r\n\r\n  const toggleOnlyFriends = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (hideFriends) setHideFriends(false);\r\n    setOnlyFriends(e.currentTarget.checked);\r\n  };\r\n\r\n  const pageChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = +e.target.value;\r\n    if (val <= pageCount) setPage(val);\r\n  };\r\n\r\n  const clearTerm = () => {\r\n    setTerm('');\r\n    setQueryParams(p => {\r\n      if (p.term !== undefined) {\r\n        dispatch(setInitialState());\r\n        return { ...p, term: undefined, page: 1 };\r\n      }\r\n      return p;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const wheelListener = (e: WheelEvent) => {\r\n      if (e.deltaY > 0) setArrowType('down');\r\n    };\r\n\r\n    document.addEventListener('wheel', wheelListener);\r\n    return () => document.removeEventListener('wheel', wheelListener);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const friend = onlyFriends ? true : hideFriends ? false : undefined;\r\n\r\n    setQueryParams(params => {\r\n      if (friend !== params.friend) {\r\n        dispatch(setInitialState());\r\n        return { ...params, friend, term: term || undefined, page: 1 };\r\n      }\r\n      return params;\r\n    });\r\n  }, [onlyFriends, hideFriends, term, dispatch, setQueryParams]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setQueryParams(params => {\r\n        if (page !== params.page) {\r\n          if (params.page === 1 && page < 1) {\r\n            setPage(1);\r\n          } else {\r\n            dispatch(setInitialState());\r\n            return { ...params, page: Math.max(1, page) };\r\n          }\r\n        }\r\n        return params;\r\n      });\r\n      clearTimeout(timer);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [page, setQueryParams, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (queryParams.friend === undefined) {\r\n      setOnlyFriends(false);\r\n      setHideFriends(false);\r\n    } else if (!queryParams.friend) {\r\n      setOnlyFriends(false);\r\n      setHideFriends(true);\r\n    } else {\r\n      setOnlyFriends(true);\r\n      setHideFriends(false);\r\n    }\r\n    setPage(queryParams.page);\r\n    setTerm(queryParams.term ?? '');\r\n  }, [queryParams]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      submitTerm();\r\n      clearTimeout(timer);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [submitTerm]);\r\n\r\n  useOnClickOutside(ref, () => {\r\n    setArrowType('down');\r\n  });\r\n\r\n  return (\r\n    <div className={styles.filterUsers} ref={ref}>\r\n      <div className={styles.title} onClick={toggleArrowType}>\r\n        <span>Parameters</span>\r\n        <div className={cx({ arrow: true, arrowD: isDarkMode })}>\r\n          <Arrow size=\"10px\" type={arrowType} color=\"#8ea6f4\" />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={cx({\r\n          popup: true,\r\n          popupD: isDarkMode,\r\n          showPopup: arrowType === 'up',\r\n        })}\r\n      >\r\n        <div className={styles.term}>\r\n          <div className={styles.magnifier} onClick={() => termSubmitHandler()}>\r\n            <MagnifierIcon size=\"15px\" />\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            id=\"term\"\r\n            placeholder=\"Search\"\r\n            autoComplete=\"off\"\r\n            value={term}\r\n            disabled={fetching}\r\n            onChange={e => setTerm(e.currentTarget.value)}\r\n            onKeyDown={termSubmitHandler}\r\n          />\r\n\r\n          <div\r\n            className={cx({ clearTerm: true, clearTermVisible: !!term.trim() })}\r\n            onClick={clearTerm}\r\n          >\r\n            <CrossIcon size=\"15px\" />\r\n          </div>\r\n        </div>\r\n        <div className={styles.toggles}>\r\n          <label>\r\n            <Toggle\r\n              checked={onlyFriends}\r\n              disabled={fetching}\r\n              onChange={toggleOnlyFriends}\r\n            />\r\n            <span>Only friends</span>\r\n          </label>\r\n          <label>\r\n            <Toggle\r\n              checked={hideFriends}\r\n              disabled={fetching}\r\n              onChange={toggleHideFriends}\r\n            />\r\n            <span>Hide friends</span>\r\n          </label>\r\n        </div>\r\n        <div className={cx({ page: true, pageD: isDarkMode })}>\r\n          <input\r\n            type=\"text\"\r\n            inputMode=\"numeric\"\r\n            id=\"page\"\r\n            value={page}\r\n            autoComplete=\"off\"\r\n            onChange={pageChangeHandler}\r\n          />\r\n          <label htmlFor=\"page\">\r\n            Page <sup className={styles.maxPage}>max: {pageCount}</sup>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from '..';\r\nimport { UsersState } from '../reducers/usersSlice';\r\n\r\nexport const selectUsersState = (state: RootState): UsersState => state.users;\r\n\r\nexport const selectUsers = (state: RootState): UsersState['users'] =>\r\n  state.users.users;\r\n\r\nexport const selectUsersTotalCount = (\r\n  state: RootState\r\n): UsersState['totalCount'] => state.users.totalCount;\r\n\r\nexport const selectUsersInFollowingProgress = (\r\n  state: RootState\r\n): UsersState['inFollowProgress'] => state.users.inFollowProgress;\r\n\r\nexport const selectIsUserInFollowingProgress = createSelector(\r\n  [selectUsersInFollowingProgress, (s: RootState, userId: number) => userId],\r\n  (usersInFollowingProgress, userId): boolean =>\r\n    usersInFollowingProgress.some(id => id === userId)\r\n);\r\n","import classNames from 'classnames/bind';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDarkMode } from 'usehooks-ts';\r\nimport photoPlaceholder from '../../../assets/userPhoto.png';\r\nimport photoPlaceholderD from '../../../assets/userPhotoDark.png';\r\nimport { useSelector } from '../../../hooks/useSelector';\r\nimport { selectIsUserInFollowingProgress } from '../../../store/selectors/usersSelector';\r\nimport { IUser } from '../../../types/users';\r\nimport FollowButton from '../../FollowButton/FollowButton';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport styles from './User.module.css';\r\n\r\nexport const User: React.FC<IUser> = ({\r\n  photos: { large: photo },\r\n  followed,\r\n  id: userId,\r\n  name,\r\n}) => {\r\n  const cx = classNames.bind(styles);\r\n  const [photoLoaded, setPhotoLoaded] = useState(false);\r\n  const { isDarkMode } = useDarkMode();\r\n  const inFollowProcess = useSelector(s =>\r\n    selectIsUserInFollowingProgress(s, userId)\r\n  );\r\n\r\n  return (\r\n    <li className={cx({ user: true, userD: isDarkMode })}>\r\n      <Link className={styles.link} to={`/profile/${userId}`} />\r\n      <div className={styles.photo}>\r\n        <Link to={`/profile/${userId}`}>\r\n          <img\r\n            src={photo || (isDarkMode ? photoPlaceholderD : photoPlaceholder)}\r\n            loading=\"lazy\"\r\n            alt=\"user\"\r\n            onLoad={() => setPhotoLoaded(true)}\r\n          />\r\n        </Link>\r\n        {!photoLoaded && (\r\n          <div className={styles.photoPreloader}>\r\n            <Preloader />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={styles.col}>\r\n        <div className={styles.username}>\r\n          <span>{name}</span>\r\n        </div>\r\n        <div className={styles.followBtn}>\r\n          <FollowButton\r\n            inFollowProcess={inFollowProcess}\r\n            followed={followed}\r\n            userId={userId}\r\n          />\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import classNames from 'classnames/bind';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDarkMode } from 'usehooks-ts';\r\nimport { useDispatch } from '../../hooks/useDispatch';\r\nimport { useQuery } from '../../hooks/useQuery';\r\nimport { useSelector } from '../../hooks/useSelector';\r\nimport { getUsers, setInitialState } from '../../store/reducers/usersSlice';\r\nimport { IQueryParams } from '../../types/users';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { ScrollBtn } from '../ScrollBtn/ScrollBtn';\r\nimport { FilterUsers } from './FilterUsers/FilterUsers';\r\nimport { User } from './User/User';\r\nimport styles from './Users.module.css';\r\n\r\nconst Users: React.FC = () => {\r\n  const cx = classNames.bind(styles);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  let query = useQuery();\r\n\r\n  const usersListObserverRef = useRef<HTMLDivElement>(null);\r\n  const { totalCount, users } = useSelector(s => s.users);\r\n  const { isDarkMode } = useDarkMode();\r\n  const [fetching, setFetching] = useState(false);\r\n  const [queryParams, setQueryParams] = useState<IQueryParams>({\r\n    count: 40,\r\n    page: Number(query.get('page')) || 1,\r\n    term: query.get('term') || undefined,\r\n    friend: !!query.get('friend') || undefined,\r\n  });\r\n  const pageCount = Math.ceil((totalCount ?? 1) / queryParams.count);\r\n\r\n  const setQueryParamsToUrl = useCallback(() => {\r\n    const { page, friend, term } = queryParams;\r\n\r\n    const search = Object.entries({ friend, term }).reduce(\r\n      (acc, [key, val]) => {\r\n        if (val !== undefined) acc += `&${key}=${val}`;\r\n        return acc;\r\n      },\r\n      `?page=${page}`\r\n    );\r\n\r\n    navigate({ search });\r\n  }, [queryParams, navigate]);\r\n\r\n  const resetParams = () => {\r\n    dispatch(setInitialState());\r\n    setQueryParams(params => ({\r\n      ...params,\r\n      page: 1,\r\n      term: undefined,\r\n      friend: undefined,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const element = usersListObserverRef.current;\r\n    const observer = new IntersectionObserver(([{ isIntersecting }]) => {\r\n      if (isIntersecting && !fetching && totalCount) {\r\n        if (queryParams.page < pageCount) {\r\n          setFetching(true);\r\n          setQueryParams(params => {\r\n            return { ...params, page: params.page + 1 };\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    if (element) observer.observe(element);\r\n\r\n    return () => {\r\n      if (element) observer.unobserve(element);\r\n    };\r\n  }, [totalCount, fetching, pageCount, queryParams.page, usersListObserverRef]);\r\n\r\n  useEffect(() => {\r\n    setFetching(true);\r\n\r\n    dispatch(getUsers(queryParams)).then(() => {\r\n      setFetching(false);\r\n      setQueryParamsToUrl();\r\n    });\r\n  }, [dispatch, queryParams, setQueryParamsToUrl]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setInitialState());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section className={styles.users}>\r\n      <div className={cx({ header: true, headerD: isDarkMode })}>\r\n        <div className={styles.usersFound}>\r\n          <span>Users found: {totalCount?.toLocaleString()}</span>\r\n        </div>\r\n        <FilterUsers\r\n          queryParams={queryParams}\r\n          setQueryParams={setQueryParams}\r\n          fetching={fetching}\r\n          pageCount={pageCount}\r\n        />\r\n      </div>\r\n      {totalCount === null ? (\r\n        <div className={styles.preloader}>\r\n          <Preloader />\r\n        </div>\r\n      ) : !!totalCount && !!users.length ? (\r\n        <ul className={styles.usersList}>\r\n          {users.map(user => (\r\n            <User {...user} key={user.id} />\r\n          ))}\r\n          {fetching && (\r\n            <div className={styles.preloader}>\r\n              <Preloader />\r\n            </div>\r\n          )}\r\n          <div ref={usersListObserverRef} />\r\n        </ul>\r\n      ) : (\r\n        <div className={cx({ notFound: true, notFoundD: isDarkMode })}>\r\n          <div className={styles.text}>\r\n            {queryParams.friend ? (\r\n              <span>\r\n                Friend\r\n                <span className={styles.term}>{` \"${queryParams.term}\" `}</span>\r\n                not found\r\n              </span>\r\n            ) : (\r\n              <span>\r\n                No results for\r\n                <span className={styles.term}>{` \"${queryParams.term}\" `}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n          <button type=\"reset\" onClick={resetParams}>\r\n            Reset params\r\n          </button>\r\n        </div>\r\n      )}\r\n      <div className={styles.scrollBtn}>\r\n        <ScrollBtn />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { useLocation } from 'react-router';\r\n\r\nexport const useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n"],"sourceRoot":""}